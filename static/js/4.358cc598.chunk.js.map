{"version":3,"sources":["Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","connect","state","console","log","reducer","alert열렸니","reducer2","useState","alert","alert변경","누른탭변경","스위치","useContext","재고context","타이머","setTimeout","clearTimeout","id","useParams","history","useHistory","arr","localStorage","getItem","JSON","parse","push","Set","setItem","stringify","찾은상품","shoes","find","상품","className","src","width","title","content","price","onClick","재고변경","dispatch","type","데이터","name","quan","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"4MAWIA,EAAKC,IAAOC,IAAV,8CAIFC,EAAKF,IAAOG,GAAV,+DAEK,SAACC,GAAD,OAAWA,EAAMC,gBAwI5B,SAASC,EAAWF,GAKlB,OAJAG,qBAAU,WACRH,EAAMI,gCAAM,MAGI,IAAdJ,EAAMK,mBACD,+EACgB,IAAdL,EAAMK,mBACR,+EACgB,IAAdL,EAAMK,mBACR,oFADF,EAKT,SAASC,EAAKN,GACZ,OAAO,gDAASA,EAAMO,aAAG,MAWZC,uBARf,SAAsBC,GAEpB,OADAC,QAAQC,IAAIF,GACL,CACLA,MAAOA,EAAMG,QACbC,0BAAUJ,EAAMK,YAILN,EA/Jf,SAAgBR,GACd,MAAuBe,oBAAS,GAAhC,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAA+BF,mBAAS,IAAxC,mBAEA,GAFA,UAEmBA,mBAAS,IAA5B,mBAAKV,EAAL,KAAUa,EAAV,KACA,EAAmBH,oBAAS,GAA5B,mBAAKI,EAAL,KAAUf,EAAV,KAESgB,qBAAWC,KAEpBlB,qBAAU,WACR,IAAImB,EAAMC,YAAW,WACnBN,GAAQ,KACP,KAEH,OADAP,QAAQC,IAAI,gBACL,WACLa,aAAaF,MAEd,IAEH,IAAMG,EAAOC,cAAPD,GACFE,EAAUC,cAOdzB,qBAAU,WACR,IAAI0B,EAAMC,aAAaC,QAAQ,YAE7BF,EADS,MAAPA,EACI,GAEAG,KAAKC,MAAMJ,IAGfK,KAAKT,GACTI,EAAM,IAAIM,IAAIN,GACdA,EAAG,YAAOA,GAEVC,aAAaM,QAAQ,UAAWJ,KAAKK,UAAUR,MAC9C,IAIH,IAAIS,EAAOtC,EAAMuC,MAAMC,MAAK,SAAUC,GACpC,OAAOA,EAAGhB,IAAMA,KAGlB,OACE,sBAAKiB,UAAU,YAAf,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAIA,UAAU,QAAd,uBAMS,IAAV1B,EACC,qBAAK0B,UAAU,WAAf,SACE,2FAEA,KAEJ,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBACEC,IAAI,iDACJC,MAAM,WAGV,sBAAKF,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBJ,EAAKO,QAC3B,4BAAIP,EAAKQ,UACT,8BAAIR,EAAKS,MAAT,YAEA,cAACzC,EAAD,CAAM,eAAIN,EAAMO,eAEhB,wBACEmC,UAAU,iBACVM,QAAS,WACPhD,EAAMiD,yBAAK,CAAC,EAAG,GAAI,KACnBjD,EAAMkD,SAAS,CACbC,KAAM,2BACNC,qBAAK,CAAE3B,GAAIa,EAAKb,GAAI4B,KAAMf,EAAKO,MAAOS,KAAM,KAE9C3B,EAAQO,KAAK,UARjB,sCAaA,wBACEQ,UAAU,iBACVM,QAAS,WACPrB,EAAQO,KAAK,MAHjB,4CAWJ,eAAC,IAAD,CAAKQ,UAAU,OAAOa,QAAQ,OAAOC,iBAAiB,SAAtD,UACE,cAAC,IAAIC,KAAL,UACE,cAAC,IAAIC,KAAL,CACEC,SAAS,SACTX,QAAS,WACP5C,GAAM,GACNc,EAAM,IAJV,sBAUF,cAAC,IAAIuC,KAAL,UACE,cAAC,IAAIC,KAAL,CACEC,SAAS,SACTX,QAAS,WACP5C,GAAM,GACNc,EAAM,IAJV,2BAYJ,cAAC,IAAD,CAAe0C,GAAIzC,EAAK0C,WAAW,MAAMC,QAAS,IAAlD,SACE,cAAC5D,EAAD,CAAY,qBAAKG,EAAK,iCAAOD,a","file":"static/js/4.358cc598.chunk.js","sourcesContent":["/* eslint-disable */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport \"./Detail.scss\";\r\nimport { 재고context } from \"./App.js\";\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet 박스 = styled.div`\r\n  padding: 30px;\r\n`;\r\n\r\nlet 제목 = styled.h4`\r\n  font-size: 25px;\r\n  color: ${(props) => props.색상};\r\n`;\r\n\r\nfunction Detail(props) {\r\n  let [alert, alert변경] = useState(true);\r\n  let [inputData, inputData변경] = useState(\"\");\r\n\r\n  let [누른탭, 누른탭변경] = useState(0);\r\n  let [스위치, 스위치변경] = useState(false);\r\n\r\n  let 재고 = useContext(재고context);\r\n\r\n  useEffect(() => {\r\n    let 타이머 = setTimeout(() => {\r\n      alert변경(false);\r\n    }, 2000);\r\n    console.log(\"안녕\");\r\n    return () => {\r\n      clearTimeout(타이머);\r\n    };\r\n  }, []);\r\n\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n\r\n\r\n\r\n\r\n  \r\n  // DB없이 데이터 저장하려고 localStorage 2\r\n  useEffect(() => {\r\n    let arr = localStorage.getItem(\"watched\");\r\n    if (arr == null) {\r\n      arr = [];\r\n    } else {\r\n      arr = JSON.parse(arr);\r\n    }\r\n\r\n    arr.push(id);\r\n    arr = new Set(arr);\r\n    arr = [...arr];\r\n\r\n    localStorage.setItem(\"watched\", JSON.stringify(arr));\r\n  }, []);\r\n\r\n  \r\n\r\n  let 찾은상품 = props.shoes.find(function (상품) {\r\n    return 상품.id == id;\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <박스>\r\n        <제목 className=\"black\">Detail</제목>\r\n      </박스>\r\n\r\n      {/* { inputData } */}\r\n      {/* <input onChange={(e)=>{ inputData변경(e.target.value) }}/> */}\r\n\r\n      {alert === true ? (\r\n        <div className=\"my-alert\">\r\n          <p>재고가 얼마없습니다.</p>\r\n        </div>\r\n      ) : null}\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img\r\n            src=\"https://codingapple1.github.io/shop/shoes1.jpg\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n          <p>{찾은상품.content}</p>\r\n          <p>{찾은상품.price}원</p>\r\n\r\n          <Info 재고={props.재고}></Info>\r\n\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              props.재고변경([9, 11, 12]);\r\n              props.dispatch({\r\n                type: \"항목추가\",\r\n                데이터: { id: 찾은상품.id, name: 찾은상품.title, quan: 1 },\r\n              });\r\n              history.push(\"/cart\");\r\n            }}\r\n          >\r\n            주문하기\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            뒤로가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-0\"\r\n            onClick={() => {\r\n              스위치변경(false);\r\n              누른탭변경(0);\r\n            }}\r\n          >\r\n            Active\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-1\"\r\n            onClick={() => {\r\n              스위치변경(false);\r\n              누른탭변경(1);\r\n            }}\r\n          >\r\n            Option 2\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n        <TabContent 누른탭={누른탭} 스위치변경={스위치변경} />\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TabContent(props) {\r\n  useEffect(() => {\r\n    props.스위치변경(true);\r\n  });\r\n\r\n  if (props.누른탭 === 0) {\r\n    return <div>0번째 내용입니다</div>;\r\n  } else if (props.누른탭 === 1) {\r\n    return <div>1번째 내용입니다</div>;\r\n  } else if (props.누른탭 === 2) {\r\n    return <div>2번째 내용입니다</div>;\r\n  }\r\n}\r\n\r\nfunction Info(props) {\r\n  return <p>재고 : {props.재고[0]}</p>;\r\n}\r\n\r\nfunction state를props화(state) {\r\n  console.log(state);\r\n  return {\r\n    state: state.reducer,\r\n    alert열렸니: state.reducer2,\r\n  };\r\n}\r\n\r\nexport default connect(state를props화)(Detail);\r\n"],"sourceRoot":""}